{"version":3,"sources":["assets/jss/material-dashboard-react/components/cardStyle.js","components/Card/Card.js","assets/jss/material-dashboard-react/components/cardHeaderStyle.js","components/Card/CardHeader.js","assets/jss/material-dashboard-react/components/cardBodyStyle.js","components/Card/CardBody.js","components/Grid/GridItem.js","components/Grid/GridContainer.js","assets/jss/material-dashboard-react/components/snackbarContentStyle.js","components/Snackbar/SnackbarContent.js","components/Snackbar/Snackbar.js","views/Notifications/Notifications.js"],"names":["cardStyle","card","border","marginBottom","marginTop","borderRadius","color","hexToRgb","blackColor","background","whiteColor","width","boxShadow","position","display","flexDirection","minWidth","wordWrap","fontSize","cardPlain","cardProfile","textAlign","cardChart","paddingTop","useStyles","makeStyles","styles","Card","props","classes","className","children","plain","profile","chart","rest","cardClasses","classNames","undefined","cardHeaderStyle","cardHeader","padding","borderBottom","zIndex","margin","lineHeight","height","overflow","cardHeaderPlain","marginLeft","marginRight","cardHeaderStats","cardHeaderIcon","warningCardHeader","successCardHeader","dangerCardHeader","infoCardHeader","primaryCardHeader","roseCardHeader","CardHeader","stats","icon","cardHeaderClasses","cardBodyStyle","cardBody","flex","WebkitBoxFlex","cardBodyPlain","paddingLeft","paddingRight","cardBodyProfile","CardBody","cardBodyClasses","grid","GridItem","item","GridContainer","container","snackbarContentStyle","root","defaultFont","flexWrap","backgroundColor","grayColor","maxWidth","top20","top","top40","info","infoColor","infoBoxShadow","success","successColor","successBoxShadow","warning","warningColor","warningBoxShadow","danger","dangerColor","dangerBoxShadow","primary","primaryColor","primaryBoxShadow","rose","roseColor","roseBoxShadow","message","close","iconButton","left","infoIcon","successIcon","warningIcon","dangerIcon","primaryIcon","roseIcon","iconMessage","actionRTL","SnackbarContent","rtlActive","action","messageClasses","IconButton","key","aria-label","Snackbar","place","open","onClick","closeNotification","anchorOrigin","vertical","indexOf","horizontal","ContentProps","cardCategoryWhite","cardTitleWhite","minHeight","fontWeight","fontFamily","textDecoration","Notifications","React","useState","tl","setTL","tc","setTC","tr","setTR","bl","setBL","bc","setBC","br","setBR","useEffect","id","window","setTimeout","clearTimeout","showNotification","target","href","xs","sm","md","AddAlert","justify","style","lg","Button","fullWidth"],"mappings":"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","file":"static/js/18.41466928.chunk.js","sourcesContent":["import {\n  blackColor,\n  whiteColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardStyle = {\n  card: {\n    border: \"0\",\n    marginBottom: \"30px\",\n    marginTop: \"30px\",\n    borderRadius: \"6px\",\n    color: \"rgba(\" + hexToRgb(blackColor) + \", 0.87)\",\n    background: whiteColor,\n    width: \"100%\",\n    boxShadow: \"0 1px 4px 0 rgba(\" + hexToRgb(blackColor) + \", 0.14)\",\n    position: \"relative\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"0\",\n    wordWrap: \"break-word\",\n    fontSize: \".875rem\"\n  },\n  cardPlain: {\n    background: \"transparent\",\n    boxShadow: \"none\"\n  },\n  cardProfile: {\n    marginTop: \"30px\",\n    textAlign: \"center\"\n  },\n  cardChart: {\n    \"& p\": {\n      marginTop: \"0px\",\n      paddingTop: \"0px\"\n    }\n  }\n};\n\nexport default cardStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Card(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, chart, ...rest } = props;\n  const cardClasses = classNames({\n    [classes.card]: true,\n    [classes.cardPlain]: plain,\n    [classes.cardProfile]: profile,\n    [classes.cardChart]: chart,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  chart: PropTypes.bool,\n  children: PropTypes.node\n};\n","import {\n  warningCardHeader,\n  successCardHeader,\n  dangerCardHeader,\n  infoCardHeader,\n  primaryCardHeader,\n  roseCardHeader,\n  whiteColor\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst cardHeaderStyle = {\n  cardHeader: {\n    padding: \"0.75rem 1.25rem\",\n    marginBottom: \"0\",\n    borderBottom: \"none\",\n    background: \"transparent\",\n    zIndex: \"3 !important\",\n    \"&$cardHeaderPlain,&$cardHeaderIcon,&$cardHeaderStats,&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      margin: \"0 15px\",\n      padding: \"0\",\n      position: \"relative\",\n      color: whiteColor\n    },\n    \"&:first-child\": {\n      borderRadius: \"calc(.25rem - 1px) calc(.25rem - 1px) 0 0\"\n    },\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      \"&:not($cardHeaderIcon)\": {\n        borderRadius: \"3px\",\n        marginTop: \"-20px\",\n        padding: \"15px\"\n      }\n    },\n    \"&$cardHeaderStats svg\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      textAlign: \"center\",\n      width: \"36px\",\n      height: \"36px\",\n      margin: \"10px 10px 4px\"\n    },\n    \"&$cardHeaderStats i,&$cardHeaderStats .material-icons\": {\n      fontSize: \"36px\",\n      lineHeight: \"56px\",\n      width: \"56px\",\n      height: \"56px\",\n      textAlign: \"center\",\n      overflow: \"unset\",\n      marginBottom: \"1px\"\n    },\n    \"&$cardHeaderStats$cardHeaderIcon\": {\n      textAlign: \"right\"\n    }\n  },\n  cardHeaderPlain: {\n    marginLeft: \"0px !important\",\n    marginRight: \"0px !important\"\n  },\n  cardHeaderStats: {\n    \"& $cardHeaderIcon\": {\n      textAlign: \"right\"\n    },\n    \"& h1,& h2,& h3,& h4,& h5,& h6\": {\n      margin: \"0 !important\"\n    }\n  },\n  cardHeaderIcon: {\n    \"&$warningCardHeader,&$successCardHeader,&$dangerCardHeader,&$infoCardHeader,&$primaryCardHeader,&$roseCardHeader\": {\n      background: \"transparent\",\n      boxShadow: \"none\"\n    },\n    \"& i,& .material-icons\": {\n      width: \"33px\",\n      height: \"33px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\"\n    },\n    \"& svg\": {\n      width: \"24px\",\n      height: \"24px\",\n      textAlign: \"center\",\n      lineHeight: \"33px\",\n      margin: \"5px 4px 0px\"\n    }\n  },\n  warningCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...warningCardHeader\n    }\n  },\n  successCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...successCardHeader\n    }\n  },\n  dangerCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...dangerCardHeader\n    }\n  },\n  infoCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...infoCardHeader\n    }\n  },\n  primaryCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...primaryCardHeader\n    }\n  },\n  roseCardHeader: {\n    color: whiteColor,\n    \"&:not($cardHeaderIcon)\": {\n      ...roseCardHeader\n    }\n  }\n};\n\nexport default cardHeaderStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardHeaderStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardHeader(props) {\n  const classes = useStyles();\n  const { className, children, color, plain, stats, icon, ...rest } = props;\n  const cardHeaderClasses = classNames({\n    [classes.cardHeader]: true,\n    [classes[color + \"CardHeader\"]]: color,\n    [classes.cardHeaderPlain]: plain,\n    [classes.cardHeaderStats]: stats,\n    [classes.cardHeaderIcon]: icon,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardHeaderClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardHeader.propTypes = {\n  className: PropTypes.string,\n  color: PropTypes.oneOf([\n    \"warning\",\n    \"success\",\n    \"danger\",\n    \"info\",\n    \"primary\",\n    \"rose\"\n  ]),\n  plain: PropTypes.bool,\n  stats: PropTypes.bool,\n  icon: PropTypes.bool,\n  children: PropTypes.node\n};\n","const cardBodyStyle = {\n  cardBody: {\n    padding: \"0.9375rem 20px\",\n    flex: \"1 1 auto\",\n    WebkitBoxFlex: \"1\",\n    position: \"relative\"\n  },\n  cardBodyPlain: {\n    paddingLeft: \"5px\",\n    paddingRight: \"5px\"\n  },\n  cardBodyProfile: {\n    marginTop: \"15px\"\n  }\n};\n\nexport default cardBodyStyle;\n","import React from \"react\";\n// nodejs library that concatenates classes\nimport classNames from \"classnames\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\n\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/cardBodyStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function CardBody(props) {\n  const classes = useStyles();\n  const { className, children, plain, profile, ...rest } = props;\n  const cardBodyClasses = classNames({\n    [classes.cardBody]: true,\n    [classes.cardBodyPlain]: plain,\n    [classes.cardBodyProfile]: profile,\n    [className]: className !== undefined\n  });\n  return (\n    <div className={cardBodyClasses} {...rest}>\n      {children}\n    </div>\n  );\n}\n\nCardBody.propTypes = {\n  className: PropTypes.string,\n  plain: PropTypes.bool,\n  profile: PropTypes.bool,\n  children: PropTypes.node\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    padding: \"0 15px !important\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridItem(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid item {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridItem.propTypes = {\n  children: PropTypes.node\n};\n","import React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst styles = {\n  grid: {\n    margin: \"0 -15px !important\",\n    width: \"unset\"\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function GridContainer(props) {\n  const classes = useStyles();\n  const { children, ...rest } = props;\n  return (\n    <Grid container {...rest} className={classes.grid}>\n      {children}\n    </Grid>\n  );\n}\n\nGridContainer.propTypes = {\n  children: PropTypes.node\n};\n","import {\n  defaultFont,\n  primaryBoxShadow,\n  infoBoxShadow,\n  successBoxShadow,\n  warningBoxShadow,\n  dangerBoxShadow,\n  roseBoxShadow,\n  whiteColor,\n  blackColor,\n  grayColor,\n  infoColor,\n  successColor,\n  dangerColor,\n  roseColor,\n  primaryColor,\n  warningColor,\n  hexToRgb\n} from \"assets/jss/material-dashboard-react.js\";\n\nconst snackbarContentStyle = {\n  root: {\n    ...defaultFont,\n    flexWrap: \"unset\",\n    position: \"relative\",\n    padding: \"20px 15px\",\n    lineHeight: \"20px\",\n    marginBottom: \"20px\",\n    fontSize: \"14px\",\n    backgroundColor: whiteColor,\n    color: grayColor[7],\n    borderRadius: \"3px\",\n    minWidth: \"unset\",\n    maxWidth: \"unset\",\n    boxShadow:\n      \"0 12px 20px -10px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.28), 0 4px 20px 0px rgba(\" +\n      hexToRgb(blackColor) +\n      \", 0.12), 0 7px 8px -5px rgba(\" +\n      hexToRgb(whiteColor) +\n      \", 0.2)\"\n  },\n  top20: {\n    top: \"20px\"\n  },\n  top40: {\n    top: \"40px\"\n  },\n  info: {\n    backgroundColor: infoColor[3],\n    color: whiteColor,\n    ...infoBoxShadow\n  },\n  success: {\n    backgroundColor: successColor[3],\n    color: whiteColor,\n    ...successBoxShadow\n  },\n  warning: {\n    backgroundColor: warningColor[3],\n    color: whiteColor,\n    ...warningBoxShadow\n  },\n  danger: {\n    backgroundColor: dangerColor[3],\n    color: whiteColor,\n    ...dangerBoxShadow\n  },\n  primary: {\n    backgroundColor: primaryColor[3],\n    color: whiteColor,\n    ...primaryBoxShadow\n  },\n  rose: {\n    backgroundColor: roseColor[3],\n    color: whiteColor,\n    ...roseBoxShadow\n  },\n  message: {\n    padding: \"0\",\n    display: \"block\",\n    maxWidth: \"89%\"\n  },\n  close: {\n    width: \"11px\",\n    height: \"11px\"\n  },\n  iconButton: {\n    width: \"24px\",\n    height: \"24px\",\n    padding: \"0px\"\n  },\n  icon: {\n    display: \"block\",\n    left: \"15px\",\n    position: \"absolute\",\n    top: \"50%\",\n    marginTop: \"-15px\",\n    width: \"30px\",\n    height: \"30px\"\n  },\n  infoIcon: {\n    color: infoColor[3]\n  },\n  successIcon: {\n    color: successColor[3]\n  },\n  warningIcon: {\n    color: warningColor[3]\n  },\n  dangerIcon: {\n    color: dangerColor[3]\n  },\n  primaryIcon: {\n    color: primaryColor[3]\n  },\n  roseIcon: {\n    color: roseColor[3]\n  },\n  iconMessage: {\n    paddingLeft: \"50px\",\n    display: \"block\"\n  },\n  actionRTL: {\n    marginLeft: \"-8px\",\n    marginRight: \"auto\"\n  }\n};\n\nexport default snackbarContentStyle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function SnackbarContent(props) {\n  const classes = useStyles();\n  const { message, color, close, icon, rtlActive } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n      >\n        <Close className={classes.close} />\n      </IconButton>\n    ];\n  }\n  return (\n    <Snack\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      classes={{\n        root: classes.root + \" \" + classes[color],\n        message: classes.message,\n        action: classNames({ [classes.actionRTL]: rtlActive })\n      }}\n      action={action}\n    />\n  );\n}\n\nSnackbarContent.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  rtlActive: PropTypes.bool\n};\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Snack from \"@material-ui/core/Snackbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// @material-ui/icons\nimport Close from \"@material-ui/icons/Close\";\n// core components\nimport styles from \"assets/jss/material-dashboard-react/components/snackbarContentStyle.js\";\n\nconst useStyles = makeStyles(styles);\n\nexport default function Snackbar(props) {\n  const classes = useStyles();\n  const { message, color, close, icon, place, open, rtlActive } = props;\n  var action = [];\n  const messageClasses = classNames({\n    [classes.iconMessage]: icon !== undefined\n  });\n  if (close !== undefined) {\n    action = [\n      <IconButton\n        className={classes.iconButton}\n        key=\"close\"\n        aria-label=\"Close\"\n        color=\"inherit\"\n        onClick={() => props.closeNotification()}\n      >\n        <Close className={classes.close} />\n      </IconButton>\n    ];\n  }\n  return (\n    <Snack\n      anchorOrigin={{\n        vertical: place.indexOf(\"t\") === -1 ? \"bottom\" : \"top\",\n        horizontal:\n          place.indexOf(\"l\") !== -1\n            ? \"left\"\n            : place.indexOf(\"c\") !== -1\n            ? \"center\"\n            : \"right\"\n      }}\n      open={open}\n      message={\n        <div>\n          {icon !== undefined ? <props.icon className={classes.icon} /> : null}\n          <span className={messageClasses}>{message}</span>\n        </div>\n      }\n      action={action}\n      ContentProps={{\n        classes: {\n          root: classes.root + \" \" + classes[color],\n          message: classes.message,\n          action: classNames({ [classes.actionRTL]: rtlActive })\n        }\n      }}\n    />\n  );\n}\n\nSnackbar.propTypes = {\n  message: PropTypes.node.isRequired,\n  color: PropTypes.oneOf([\"info\", \"success\", \"warning\", \"danger\", \"primary\"]),\n  close: PropTypes.bool,\n  icon: PropTypes.object,\n  place: PropTypes.oneOf([\"tl\", \"tr\", \"tc\", \"br\", \"bl\", \"bc\"]),\n  open: PropTypes.bool,\n  rtlActive: PropTypes.bool,\n  closeNotification: PropTypes.func\n};\n","/*eslint-disable*/\nimport React from \"react\";\n// nodejs library to set properties for components\nimport PropTypes from \"prop-types\";\n// @material-ui/core components\nimport { makeStyles } from \"@material-ui/core/styles\";\n// @material-ui/icons\nimport AddAlert from \"@material-ui/icons/AddAlert\";\n// core components\nimport GridItem from \"components/Grid/GridItem.js\";\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.js\";\nimport Snackbar from \"components/Snackbar/Snackbar.js\";\nimport Card from \"components/Card/Card.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport CardBody from \"components/Card/CardBody.js\";\n\nconst styles = {\n  cardCategoryWhite: {\n    \"&,& a,& a:hover,& a:focus\": {\n      color: \"rgba(255,255,255,.62)\",\n      margin: \"0\",\n      fontSize: \"14px\",\n      marginTop: \"0\",\n      marginBottom: \"0\"\n    },\n    \"& a,& a:hover,& a:focus\": {\n      color: \"#FFFFFF\"\n    }\n  },\n  cardTitleWhite: {\n    color: \"#FFFFFF\",\n    marginTop: \"0px\",\n    minHeight: \"auto\",\n    fontWeight: \"300\",\n    fontFamily: \"'Roboto', 'Helvetica', 'Arial', sans-serif\",\n    marginBottom: \"3px\",\n    textDecoration: \"none\",\n    \"& small\": {\n      color: \"#777\",\n      fontSize: \"65%\",\n      fontWeight: \"400\",\n      lineHeight: \"1\"\n    }\n  }\n};\n\nconst useStyles = makeStyles(styles);\n\nexport default function Notifications(props) {\n  const classes = useStyles();\n  const [tl, setTL] = React.useState(false);\n  const [tc, setTC] = React.useState(false);\n  const [tr, setTR] = React.useState(false);\n  const [bl, setBL] = React.useState(false);\n  const [bc, setBC] = React.useState(false);\n  const [br, setBR] = React.useState(false);\n\n  React.useEffect(() => {\n    // Specify how to clean up after this effect:\n    return function cleanup() {\n      // to stop the warning of calling setState of unmounted component\n      var id = window.setTimeout(null, 0);\n      while (id--) {\n        window.clearTimeout(id);\n      }\n    };\n  });\n  const showNotification = place => {\n    switch (place) {\n      case \"tl\":\n        if (!tl) {\n          setTL(true);\n          setTimeout(function() {\n            setTL(false);\n          }, 6000);\n        }\n        break;\n      case \"tc\":\n        if (!tc) {\n          setTC(true);\n          setTimeout(function() {\n            setTC(false);\n          }, 6000);\n        }\n        break;\n      case \"tr\":\n        if (!tr) {\n          setTR(true);\n          setTimeout(function() {\n            setTR(false);\n          }, 6000);\n        }\n        break;\n      case \"bl\":\n        if (!bl) {\n          setBL(true);\n          setTimeout(function() {\n            setBL(false);\n          }, 6000);\n        }\n        break;\n      case \"bc\":\n        if (!bc) {\n          setBC(true);\n          setTimeout(function() {\n            setBC(false);\n          }, 6000);\n        }\n        break;\n      case \"br\":\n        if (!br) {\n          setBR(true);\n          setTimeout(function() {\n            setBR(false);\n          }, 6000);\n        }\n        break;\n      default:\n        break;\n    }\n  };\n  return (\n    <Card>\n      <CardHeader color=\"primary\">\n        <h4 className={classes.cardTitleWhite}>Notifications</h4>\n        <p className={classes.cardCategoryWhite}>\n          Handcrafted by our friends from{\" \"}\n          <a\n            target=\"_blank\"\n            href=\"https://material-ui-next.com/?ref=creativetime\"\n          >\n            Material UI\n          </a>{\" \"}\n          and styled by{\" \"}\n          <a\n            target=\"_blank\"\n            href=\"https://www.creative-tim.com/?ref=mdr-notifications-page\"\n          >\n            Creative Tim\n          </a>\n          . Please checkout the{\" \"}\n          <a href=\"#pablo\" target=\"_blank\">\n            full documentation\n          </a>\n          .\n        </p>\n      </CardHeader>\n      <CardBody>\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={6}>\n            <h5>Notifications Style</h5>\n            <br />\n            <SnackbarContent message={\"This is a plain notification\"} />\n            <SnackbarContent\n              message={\"This is a notification with close button.\"}\n              close\n            />\n            <SnackbarContent\n              message={\"This is a notification with close button and icon.\"}\n              close\n              icon={AddAlert}\n            />\n            <SnackbarContent\n              message={\n                \"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\"\n              }\n              close\n              icon={AddAlert}\n            />\n          </GridItem>\n          <GridItem xs={12} sm={12} md={6}>\n            <h5>Notifications States</h5>\n            <br />\n            <SnackbarContent\n              message={\n                'INFO - This is a regular notification made with color=\"info\"'\n              }\n              close\n              color=\"info\"\n            />\n            <SnackbarContent\n              message={\n                'SUCCESS - This is a regular notification made with color=\"success\"'\n              }\n              close\n              color=\"success\"\n            />\n            <SnackbarContent\n              message={\n                'WARNING - This is a regular notification made with color=\"warning\"'\n              }\n              close\n              color=\"warning\"\n            />\n            <SnackbarContent\n              message={\n                'DANGER - This is a regular notification made with color=\"danger\"'\n              }\n              close\n              color=\"danger\"\n            />\n            <SnackbarContent\n              message={\n                'PRIMARY - This is a regular notification made with color=\"primary\"'\n              }\n              close\n              color=\"primary\"\n            />\n          </GridItem>\n        </GridContainer>\n        <br />\n        <br />\n        <GridContainer justify=\"center\">\n          <GridItem xs={12} sm={12} md={6} style={{ textAlign: \"center\" }}>\n            <h5>\n              Notifications Places\n              <br />\n              <small>Click to view notifications</small>\n            </h5>\n          </GridItem>\n        </GridContainer>\n        <GridContainer justify=\"center\">\n          <GridItem xs={12} sm={12} md={10} lg={8}>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={4}>\n                <Button\n                  fullWidth\n                  color=\"primary\"\n                  onClick={() => showNotification(\"tl\")}\n                >\n                  Top Left\n                </Button>\n                <Snackbar\n                  place=\"tl\"\n                  color=\"info\"\n                  icon={AddAlert}\n                  message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                  open={tl}\n                  closeNotification={() => setTL(false)}\n                  close\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={4}>\n                <Button\n                  fullWidth\n                  color=\"primary\"\n                  onClick={() => showNotification(\"tc\")}\n                >\n                  Top Center\n                </Button>\n                <Snackbar\n                  place=\"tc\"\n                  color=\"info\"\n                  icon={AddAlert}\n                  message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                  open={tc}\n                  closeNotification={() => setTC(false)}\n                  close\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={4}>\n                <Button\n                  fullWidth\n                  color=\"primary\"\n                  onClick={() => showNotification(\"tr\")}\n                >\n                  Top Right\n                </Button>\n                <Snackbar\n                  place=\"tr\"\n                  color=\"info\"\n                  icon={AddAlert}\n                  message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                  open={tr}\n                  closeNotification={() => setTR(false)}\n                  close\n                />\n              </GridItem>\n            </GridContainer>\n          </GridItem>\n        </GridContainer>\n        <GridContainer justify={\"center\"}>\n          <GridItem xs={12} sm={12} md={10} lg={8}>\n            <GridContainer>\n              <GridItem xs={12} sm={12} md={4}>\n                <Button\n                  fullWidth\n                  color=\"primary\"\n                  onClick={() => showNotification(\"bl\")}\n                >\n                  Bottom Left\n                </Button>\n                <Snackbar\n                  place=\"bl\"\n                  color=\"info\"\n                  icon={AddAlert}\n                  message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                  open={bl}\n                  closeNotification={() => setBL(false)}\n                  close\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={4}>\n                <Button\n                  fullWidth\n                  color=\"primary\"\n                  onClick={() => showNotification(\"bc\")}\n                >\n                  Bottom Center\n                </Button>\n                <Snackbar\n                  place=\"bc\"\n                  color=\"info\"\n                  icon={AddAlert}\n                  message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                  open={bc}\n                  closeNotification={() => setBC(false)}\n                  close\n                />\n              </GridItem>\n              <GridItem xs={12} sm={12} md={4}>\n                <Button\n                  fullWidth\n                  color=\"primary\"\n                  onClick={() => showNotification(\"br\")}\n                >\n                  Bottom Right\n                </Button>\n                <Snackbar\n                  place=\"br\"\n                  color=\"info\"\n                  icon={AddAlert}\n                  message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                  open={br}\n                  closeNotification={() => setBR(false)}\n                  close\n                />\n              </GridItem>\n            </GridContainer>\n          </GridItem>\n        </GridContainer>\n      </CardBody>\n    </Card>\n  );\n}\n"],"sourceRoot":""}