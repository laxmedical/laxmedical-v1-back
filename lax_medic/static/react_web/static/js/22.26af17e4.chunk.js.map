{"version":3,"sources":["workViews/Reception/PatientList.js"],"names":["createData","id","name","calories","fat","protein","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","label","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","padding","indeterminate","checked","onChange","inputProps","map","headCell","key","align","sortDirection","active","direction","onClick","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","clsx","variant","component","aria-label","useStyles","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","position","top","PatientList","addCallBack","deleteCallBack","webSocket","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","setRows","useEffect","send","JSON","stringify","content","page_index","console","log","run","data","status","d","patients","p","age","birth_date","Date","date_now","getYear","first_name","last_name","username","sex","fiches","emptyRows","Math","min","length","aria-labelledby","size","target","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","alt","src","scope","to","style","colSpan","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","value","control"],"mappings":"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","file":"static/js/22.26af17e4.chunk.js","sourcesContent":["\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction createData(id, name, calories, fat, protein) {\r\n  return {id, name, calories, fat,  protein };\r\n}\r\n\r\nconst rows1 = [\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Donut', 452, 25.0, 51, 4.9),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n  createData('KitKat', 518, 26.0, 65, 7.0),\r\n  createData('Lollipop', 392, 0.2, 98, 0.0),\r\n  createData('Marshmallow', 318, 0, 81, 2.0),\r\n  createData('Nougat', 360, 19.0, 9, 37.0),\r\n  createData('Oreo', 437, 18.0, 63, 4.0),\r\n];\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'ID', numeric: false, disablePadding: false, label: 'N°' },\r\n  { id: 'name', numeric: false, disablePadding: true, label: 'Nom' },\r\n  { id: 'calories', numeric: false, disablePadding: false, label: 'Sex' },\r\n  { id: 'fat', numeric:  false, disablePadding: false, label: 'Age' },\r\n  { id: 'protein', numeric:  false, disablePadding: false, label: 'fiches' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          Liste des patients\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function PatientList({addCallBack, deleteCallBack, webSocket}) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(true);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  const [rows, setRows] = React.useState([]);\r\n  \r\n  React.useEffect(() => {\r\n    webSocket.send(JSON.stringify({\r\n      type: 'get_patients',\r\n      content: {page_index: 1}\r\n      })\r\n    )\r\n\r\n    console.log(addCallBack)\r\n    addCallBack({\r\n      id: 'PatientList',\r\n      type: [\r\n        'patient_list'\r\n      ],\r\n\r\n      run: (data) => {\r\n        console.log('je suis la depuis PatientList')\r\n        console.log(data)\r\n        if (data.type === 'patient_list' && data.status !== 'error'){\r\n          const d = data.content.patients.map(p=>{\r\n            let age;\r\n            const birth_date = new Date(p.birth_date)\r\n            const date_now = new Date()\r\n            const patient_age = new Date(date_now - birth_date)\r\n            age = patient_age.getYear() - 70\r\n            return createData(p.id, `${p.first_name} ${p.last_name} ${p.username}`, p.sex, age, p.fiches)\r\n          })\r\n          setRows(d)\r\n        }\r\n      }\r\n    })\r\n    return () => {\r\n      deleteCallBack('PatientList')\r\n    }\r\n  }, [])\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      role=\"link\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell >\r\n                      <Avatar alt={null} src={'avatarLink'} />\r\n                      </TableCell>\r\n                      <TableCell >\r\n                      {row.id}\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n                      <Link to={`/lax_medic/work-place/patient-profiles-${row.id}/liste-des-fiches`}>{row.name}</Link>\r\n                      </TableCell>\r\n                      <TableCell>{row.calories}</TableCell>\r\n                      <TableCell>{row.fat} ans</TableCell>\r\n                      <TableCell>{row.protein} | <Link to={`/lax_medic/work-place/patient-profiles-${row.id}/enregistrer-une-fiche`}>Ajouter</Link></TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}"],"sourceRoot":""}